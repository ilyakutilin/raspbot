from typing import NamedTuple

from raspbot.db.stations.schema import PointResponse


class SinglePointFound(PointResponse):
    is_departure: bool
    id: int | None = None
    yandex_code: str | None = None

    def __str__(self):
        dep_or_dest = "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è" if self.is_departure else "–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è"
        type_ = "—Å—Ç." if self.is_station else "–≥."
        title = self.title
        region = self.region_title
        return f"–ü—É–Ω–∫—Ç {dep_or_dest} - {type_} {title}, {region}"


class Message(NamedTuple):
    INPUT_DEPARTURE_POINT: str = "–í–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–≥–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç–∞–Ω—Ü–∏—é):"
    POINT_NOT_FOUND: str = (
        "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–∞–∫–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ –∏–ª–∏ –≥–æ—Ä–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ-–¥—Ä—É–≥–æ–º—É:"
    )
    MISSING_POINT: str = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å—Ç–∞–Ω—Ü–∏–∏ –ø–æ-–¥—Ä—É–≥–æ–º—É:"
    MULTIPLE_POINTS_FOUND: str = (
        "–ë—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—É–Ω–∫—Ç–æ–≤, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏—Ö –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç (–≥–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç–∞–Ω—Ü–∏—é) –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )
    INPUT_DESTINATION_POINT: str = (
        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–≥–æ—Ä–æ–¥ –∏–ª–∏ —Å—Ç–∞–Ω—Ü–∏—é):"
    )
    SEARCHING_FOR_TIMETABLE: str = "–ò—â–µ–º —Ä–∞–ø–∏—Å–∞–Ω–∏–µ..."


class Button(NamedTuple):
    NEW_SEARCH: str = "–ù–æ–≤—ã–π –ø–æ–∏—Å–∫"
    MY_POINT_IS_NOT_HERE: str = "–ù–µ—Ç –º–æ–µ–≥–æ –ø—É–Ω–∫—Ç–∞ üòï"


msg = Message()
btn = Button()
